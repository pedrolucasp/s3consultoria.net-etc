---
- name: set hostname
  hostname: name={{ system_hostname }}
  when: system_hostname is defined
  tags: [common]

- name: set /etc/hostname
  command: echo -n {{ system_hostname }} > /etc/hostname
  when: system_hostname is defined
  tags: [common]

- name: set /etc/timezone
  command: echo -n 'America/Sao_Paulo' > /etc/timezone
  tags: [common]

- name: reconfigure clock
  command: dpkg-reconfigure -f noninteractive tzdata
  tags: [common]

- name: install important sysadmin packages
  apt:
    state: present
    update_cache: yes
    name:
      - doas
      - strace
      - lsof
      - ca-certificates
      - ntp
      - git
      - curl
      - vim
      - htop
      - iotop
      - rsync
      - docker-compose
      - ncdu
  tags: [common, packages]

- name: install doas.conf
  ansible.builtin.template:
    src: doas.conf.j2
    dest: /etc/doas.conf
    mode: '0644'
  tags: [common]

- name: disable openssh debian banner
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: "^#?DebianBanner"
    line: "DebianBanner no"
  notify: reload ssh
  tags: [common]

- name: ensure group "admin" exists
  ansible.builtin.group:
    name: admin
    state: present
  tags: [common]

- name: add access user
  user:
    name: "{{ access_user }}"
    password: x
    groups: admin,sudo
    append: yes
    shell: /bin/bash
    state: present
  tags: [common]

- name: add authorized SSH key for the access user
  authorized_key:
    user: "{{ access_user }}"
    key: "{{ item }}"
  with_file:
    - "{{ access_ssh_key }}"
  tags: [common]

- name: Setup unattended-upgrades
  ansible.builtin.lineinfile:
    path: /etc/apt/apt.conf.d/50unattended-upgrades
    state: present
    regexp: "^#?//Unattended-Upgrade::Mail "
    line: 'Unattended-Upgrade::Mail "{{ access_user }}";'
  tags: [apt]

- name: Enable and start systemd services
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: started
    enabled: true
  with_items:
    - apt-daily.timer
  tags: [apt]

# XXX: Make sure to run these lines *after* the setup to not lock yourself out
- name: disable remote root SSH login
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: "^#?PermitRootLogin"
    line: "PermitRootLogin no"
  notify: reload ssh
  tags: [sshd]

- name: disable password login for SSH
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: "^#?PasswordAuthentication"
    line: "PasswordAuthentication no"
  notify: reload ssh
  tags: [sshd]
